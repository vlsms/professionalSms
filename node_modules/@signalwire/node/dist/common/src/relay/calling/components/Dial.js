"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const BaseComponent_1 = require("./BaseComponent");
const relay_1 = require("../../../util/constants/relay");
const Event_1 = __importDefault(require("../Event"));
class Dial extends BaseComponent_1.BaseComponent {
    constructor() {
        super(...arguments);
        this.eventType = relay_1.CallNotification.Dial;
        this.method = relay_1.CallMethod.Dial;
        this.controlId = this.call.tag;
    }
    get payload() {
        var _a;
        const payload = {
            tag: this.call.tag,
            devices: (_a = this.call.devices) !== null && _a !== void 0 ? _a : [[this.call.device]]
        };
        if (this.call.region) {
            payload.region = this.call.region;
        }
        return payload;
    }
    notificationHandler(params) {
        const { dial_state, call } = params;
        this.state = dial_state;
        this.completed = this._eventsToWait.includes(this.state);
        if (this.completed) {
            this.successful = this.state === relay_1.DialState.Answered;
            this.event = new Event_1.default(this.state, params);
        }
        if (this._hasBlocker() && this.completed) {
            this.blocker.resolve();
        }
    }
}
exports.Dial = Dial;
