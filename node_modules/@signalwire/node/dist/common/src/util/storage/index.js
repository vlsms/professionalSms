"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const helpers_1 = require("../helpers");
const _inNode = () => typeof window === 'undefined' && typeof process !== 'undefined';
const _get = (storageType, key) => __awaiter(void 0, void 0, void 0, function* () {
    if (_inNode())
        return null;
    const res = window[storageType].getItem(helpers_1.mutateStorageKey(key));
    return helpers_1.safeParseJson(res);
});
const _set = (storageType, key, value) => __awaiter(void 0, void 0, void 0, function* () {
    if (_inNode())
        return null;
    if (typeof value === 'object') {
        value = JSON.stringify(value);
    }
    window[storageType].setItem(helpers_1.mutateStorageKey(key), value);
});
const _remove = (storageType, key) => __awaiter(void 0, void 0, void 0, function* () {
    if (_inNode())
        return null;
    return window[storageType].removeItem(helpers_1.mutateStorageKey(key));
});
exports.localStorage = {
    getItem: (key) => _get('localStorage', key),
    setItem: (key, value) => _set('localStorage', key, value),
    removeItem: (key) => _remove('localStorage', key),
};
exports.sessionStorage = {
    getItem: (key) => _get('sessionStorage', key),
    setItem: (key, value) => _set('sessionStorage', key, value),
    removeItem: (key) => _remove('sessionStorage', key),
};
