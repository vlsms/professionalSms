"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var PeerType;
(function (PeerType) {
    PeerType["Offer"] = "offer";
    PeerType["Answer"] = "answer";
})(PeerType = exports.PeerType || (exports.PeerType = {}));
var Direction;
(function (Direction) {
    Direction["Inbound"] = "inbound";
    Direction["Outbound"] = "outbound";
})(Direction = exports.Direction || (exports.Direction = {}));
var VertoMethod;
(function (VertoMethod) {
    VertoMethod["Invite"] = "verto.invite";
    VertoMethod["Attach"] = "verto.attach";
    VertoMethod["Answer"] = "verto.answer";
    VertoMethod["Info"] = "verto.info";
    VertoMethod["Display"] = "verto.display";
    VertoMethod["Media"] = "verto.media";
    VertoMethod["Event"] = "verto.event";
    VertoMethod["Bye"] = "verto.bye";
    VertoMethod["Punt"] = "verto.punt";
    VertoMethod["Broadcast"] = "verto.broadcast";
    VertoMethod["Subscribe"] = "verto.subscribe";
    VertoMethod["Unsubscribe"] = "verto.unsubscribe";
    VertoMethod["ClientReady"] = "verto.clientReady";
    VertoMethod["Modify"] = "verto.modify";
})(VertoMethod = exports.VertoMethod || (exports.VertoMethod = {}));
exports.NOTIFICATION_TYPE = {
    generic: 'event',
    [VertoMethod.Display]: 'participantData',
    [VertoMethod.Attach]: 'participantData',
    conferenceUpdate: 'conferenceUpdate',
    callUpdate: 'callUpdate',
    vertoClientReady: 'vertoClientReady',
    userMediaError: 'userMediaError',
    refreshToken: 'refreshToken',
};
exports.DEFAULT_CALL_OPTIONS = {
    destinationNumber: '',
    remoteCallerName: 'Outbound Call',
    remoteCallerNumber: '',
    callerName: '',
    callerNumber: '',
    audio: true,
    video: false,
    useStereo: false,
    attach: false,
    screenShare: false,
    userVariables: {},
};
var State;
(function (State) {
    State[State["New"] = 0] = "New";
    State[State["Requesting"] = 1] = "Requesting";
    State[State["Trying"] = 2] = "Trying";
    State[State["Recovering"] = 3] = "Recovering";
    State[State["Ringing"] = 4] = "Ringing";
    State[State["Answering"] = 5] = "Answering";
    State[State["Early"] = 6] = "Early";
    State[State["Active"] = 7] = "Active";
    State[State["Held"] = 8] = "Held";
    State[State["Hangup"] = 9] = "Hangup";
    State[State["Destroy"] = 10] = "Destroy";
    State[State["Purge"] = 11] = "Purge";
})(State = exports.State || (exports.State = {}));
var Role;
(function (Role) {
    Role["Participant"] = "participant";
    Role["Moderator"] = "moderator";
})(Role = exports.Role || (exports.Role = {}));
var ConferenceAction;
(function (ConferenceAction) {
    ConferenceAction["Join"] = "join";
    ConferenceAction["Leave"] = "leave";
    ConferenceAction["Bootstrap"] = "bootstrap";
    ConferenceAction["Add"] = "add";
    ConferenceAction["Modify"] = "modify";
    ConferenceAction["Delete"] = "delete";
    ConferenceAction["Clear"] = "clear";
    ConferenceAction["ChatMessage"] = "chatMessage";
    ConferenceAction["LayerInfo"] = "layerInfo";
    ConferenceAction["LogoInfo"] = "logoInfo";
    ConferenceAction["LayoutInfo"] = "layoutInfo";
    ConferenceAction["LayoutList"] = "layoutList";
    ConferenceAction["ModCmdResponse"] = "modCommandResponse";
})(ConferenceAction = exports.ConferenceAction || (exports.ConferenceAction = {}));
var DeviceType;
(function (DeviceType) {
    DeviceType["Video"] = "videoinput";
    DeviceType["AudioIn"] = "audioinput";
    DeviceType["AudioOut"] = "audiooutput";
})(DeviceType = exports.DeviceType || (exports.DeviceType = {}));
