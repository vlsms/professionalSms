import { CallOptions } from './interfaces';
export declare enum PeerType {
    Offer = "offer",
    Answer = "answer"
}
export declare enum Direction {
    Inbound = "inbound",
    Outbound = "outbound"
}
export declare enum VertoMethod {
    Invite = "verto.invite",
    Attach = "verto.attach",
    Answer = "verto.answer",
    Info = "verto.info",
    Display = "verto.display",
    Media = "verto.media",
    Event = "verto.event",
    Bye = "verto.bye",
    Punt = "verto.punt",
    Broadcast = "verto.broadcast",
    Subscribe = "verto.subscribe",
    Unsubscribe = "verto.unsubscribe",
    ClientReady = "verto.clientReady",
    Modify = "verto.modify"
}
export declare const NOTIFICATION_TYPE: {
    generic: string;
    "verto.display": string;
    "verto.attach": string;
    conferenceUpdate: string;
    callUpdate: string;
    vertoClientReady: string;
    userMediaError: string;
    refreshToken: string;
};
export declare const DEFAULT_CALL_OPTIONS: CallOptions;
export declare enum State {
    New = 0,
    Requesting = 1,
    Trying = 2,
    Recovering = 3,
    Ringing = 4,
    Answering = 5,
    Early = 6,
    Active = 7,
    Held = 8,
    Hangup = 9,
    Destroy = 10,
    Purge = 11
}
export declare enum Role {
    Participant = "participant",
    Moderator = "moderator"
}
export declare enum ConferenceAction {
    Join = "join",
    Leave = "leave",
    Bootstrap = "bootstrap",
    Add = "add",
    Modify = "modify",
    Delete = "delete",
    Clear = "clear",
    ChatMessage = "chatMessage",
    LayerInfo = "layerInfo",
    LogoInfo = "logoInfo",
    LayoutInfo = "layoutInfo",
    LayoutList = "layoutList",
    ModCmdResponse = "modCommandResponse"
}
export declare enum DeviceType {
    Video = "videoinput",
    AudioIn = "audioinput",
    AudioOut = "audiooutput"
}
