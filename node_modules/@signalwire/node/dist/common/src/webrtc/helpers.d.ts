import { CallOptions } from './interfaces';
declare const getUserMedia: (constraints: MediaStreamConstraints) => Promise<MediaStream>;
declare const getDevices: (kind?: string, fullList?: boolean) => Promise<MediaDeviceInfo[]>;
declare const scanResolutions: (deviceId: string) => Promise<any[]>;
declare const getMediaConstraints: (options: CallOptions) => Promise<MediaStreamConstraints>;
declare const assureDeviceId: (id: string, label: string, kind: MediaDeviceKind) => Promise<string>;
declare const removeUnsupportedConstraints: (constraints: MediaTrackConstraints) => void;
declare const checkDeviceIdConstraints: (id: string, label: string, kind: MediaDeviceKind, constraints: MediaTrackConstraints) => Promise<MediaTrackConstraints>;
declare const sdpStereoHack: (sdp: string) => string;
declare const sdpMediaOrderHack: (answer: string, localOffer: string) => string;
declare const checkSubscribeResponse: (response: any, channel: string) => boolean;
declare type DestructuredResult = {
    subscribed: string[];
    alreadySubscribed: string[];
    unauthorized: string[];
    unsubscribed: string[];
    notSubscribed: string[];
};
declare const destructSubscribeResponse: (response: any) => DestructuredResult;
declare const enableAudioTracks: (stream: MediaStream) => void;
declare const disableAudioTracks: (stream: MediaStream) => void;
declare const toggleAudioTracks: (stream: MediaStream) => void;
declare const enableVideoTracks: (stream: MediaStream) => void;
declare const disableVideoTracks: (stream: MediaStream) => void;
declare const toggleVideoTracks: (stream: MediaStream) => void;
declare const sdpBitrateHack: (sdp: string, max: number, min: number, start: number) => string;
export { getUserMedia, getDevices, scanResolutions, getMediaConstraints, assureDeviceId, removeUnsupportedConstraints, checkDeviceIdConstraints, sdpStereoHack, sdpMediaOrderHack, sdpBitrateHack, checkSubscribeResponse, destructSubscribeResponse, enableAudioTracks, disableAudioTracks, toggleAudioTracks, enableVideoTracks, disableVideoTracks, toggleVideoTracks, };
